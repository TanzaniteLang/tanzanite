#include "tokens.hpp"

#include <map>
#include <string>

using Tanzanite::TokenTypes;

std::map<std::string, Tanzanite::TokenTypes> tokens {
    // operators
    {"+", TokenTypes::Plus},
    {"-", TokenTypes::Minus},
    {"*", TokenTypes::Asterisk},
    {"/", TokenTypes::Slash},
    {"%", TokenTypes::Modulo},
    {"**", TokenTypes::DoubleAsterisk},
    {"//", TokenTypes::DoubleSlash},
    {"!", TokenTypes::Bang},
    {"~", TokenTypes::Tilda},
    {"<<", TokenTypes::LeftShift},
    {">>", TokenTypes::RightShift},
    {"&", TokenTypes::Ampersand},
    {"|", TokenTypes::Pipe},
    {"^", TokenTypes::Caret},
    {"==", TokenTypes::Equals},
    {"!=", TokenTypes::NotEquals},
    {"<", TokenTypes::LessThan},
    {"<=", TokenTypes::LessAndEqualThan},
    {">", TokenTypes::GreaterThan},
    {">=", TokenTypes::GreatedAndEqualThan},
    {"<=>", TokenTypes::SpaceShip},
    {"&&", TokenTypes::And},
    {"||", TokenTypes::Or},
    {"|>", TokenTypes::PipeTo},
    {"=", TokenTypes::Assing},
    // keywords
    {"if", TokenTypes::If},
    {"else", TokenTypes::Else},
    {"elsif", TokenTypes::Elsif},
    {"for", TokenTypes::For},
    {"while", TokenTypes::While},
    {"until", TokenTypes::Until},
    {"unless", TokenTypes::Unless},
    {"break", TokenTypes::Break},
    {"case", TokenTypes::Case},
    {"when", TokenTypes::When},
    {"true", TokenTypes::Bool},
    {"false", TokenTypes::Bool},
    {"def", TokenTypes::Def},
    {"fun", TokenTypes::Fun},
    {"nil", TokenTypes::Nil},
    {"return", TokenTypes::Return},
    {"sizeof", TokenTypes::Sizeof},
    {"with", TokenTypes::With},
    // delimiters
    {".", TokenTypes::Do},
    {",", TokenTypes::Comma},
    {":", TokenTypes::Colon},
    {";", TokenTypes::Semicolon},
    {"(", TokenTypes::LBracket},
    {")", TokenTypes::RBracket},
    {"[", TokenTypes::LSquareBracket},
    {"]", TokenTypes::RSquareBracket},
    {"{", TokenTypes::LSquiglyBracket},
    {"}", TokenTypes::RSquiglyBracket},
};
